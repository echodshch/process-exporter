---
- name: block with sudo
  remote_user: "{{ exporter_user }}"
  block:
    
    - name: logs
      file:
        path: "{{ nginx_exporter_log_path }}"
        owner: "{{ exporter_user }}"
        group: "{{ exporter_group }}"
        mode: "u=rwx,g=rx,o="
        state: directory
    
    - name: download tarball
      get_url:
        url: "{{ nginx_exporter_tarball_url }}"
        checksum: "{{ nginx_exporter_tarball_checksum }}"
        dest: "{{ prometheus_exporter_dist_dir }}/{{ nginx_exporter_signature }}.tar.gz"
        owner: root
        group: root
        mode: "u=rwx,go=rx"
    
    - name: make distribution directory
      file:
        path: "{{ nginx_exporter_dist_dir }}"
        owner: root
        group: root
        mode: "u=rwx,go=rx"
        state: directory
    
    - name: untar tarball
      unarchive:
        src: "{{ prometheus_exporter_dist_dir }}/{{ nginx_exporter_signature }}.tar.gz"
        dest: "{{ nginx_exporter_dist_dir }}"
        remote_src: true
        owner: root
        group: root
        mode: "u=rwx,go=rx"
        creates: "{{ nginx_exporter_dist_dir }}/nginx-prometheus-exporter"
    
    - name: symlink
      file:
        src: "{{ nginx_exporter_dist_dir }}/nginx-prometheus-exporter"
        path: "{{ prometheus_exporter_dir }}/nginx_exporter"
        owner: "{{ exporter_user }}"
        group: "{{ exporter_group }}"
        force: true
        state: link
      notify: restart nginx_exporter
    
    - name: config
      template:
        src: "nginx_exporter.default.conf.j2"
        dest: "/etc/default/nginx_exporter"
        owner: root
        group: root
        mode: "u=rw,go=r"
      notify: restart nginx_exporter
    
    - name: install service
      include: service-systemd.yml
    
    - name: Service Enabled
      service:
        name: nginx_exporter
        enabled: "{{ nginx_exporter_service_enable }}"
        use: "systemd"
      when: nginx_exporter_service_manage
    
    - name: Service State
      service:
        name: nginx_exporter
        state: "{{ nginx_exporter_service_state }}"
        use: "{{ prometheus_exporter_service_mgr }}"
      register: _nginx_exporter_service_state
      when: nginx_exporter_service_manage

    - name: add nginx to pmm server
      shell: pmm-admin add external --service-name={{ pmm_hostname }}_nginx_exporter --listen-port={{ nginx_exporter_port }}

    - name: add conf
      include: add-conf.yml

  become: true
